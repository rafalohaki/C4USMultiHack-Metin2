name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Debug

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: Cache DirectX SDK
      uses: actions/cache@v2
      id: cache-directx
      with:
        path: DX8a_SDK.exe
        key: ${{ runner.os }}-DX8a_SDK
    - name: Download DirectX SDK
      run: curl -L --silent --show-error --output DXSDK_Jun10.exe https://archive.org/download/dx8a_sdk/DX8a_SDK.exe
    - name: Install DirectX SDK
      run: cmd.exe /c start /wait .\DX8a_SDK.exe /U /O /F /S /P "${{ github.workspace }}\DX_SDK"

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
